
using Plots
using Pkg
Pkg.activate(".")
using howtogridding





costerm(R,θ,ζ,m,n) = R*cos(m*θ - n*ζ)
sinterm(Z,θ,ζ,m,n) = Z*sin(m*θ - n*ζ)


# Construct the boundary for a O-shaped poloidal slice

θ = collect(0.0:2π/100.0:2π)

Rout = [6e-1]
Zout = [-6e-1]


Rin = [3e-1]
Zin = [-3e-1]


outer = Torus(Rout,Zout,[1],[0])
inner = Torus(Rin,Zin,[1],[0])


X,Y = meshgrid(inner,outer,0.0,11,3)
scatter(X[:],Y[:])


# AoutR = cosinespace(Rout,θ,0.0,[0,1],[0])
# AoutZ = sinusespace(Zout,θ,0.0,[0,1],[0])
# AinR = cosinespace(Rin,θ,0.0,[0,1],[0,1])
# AinZ = sinusespace(Zin,θ,0.0,[0,1],[0,1])
# plot(AoutR,AoutZ,aspect_ratio=:equal)
# plot!(AinR,AinZ,aspect_ratio=:equal)



Rout = zeros(Float64,(2,2))
Rout[1,1] = 1.0
Rout[1,2] = 2.5e-1

Zout = zeros(Float64,(2,2))
Zout[1,1] = -1.0
Zout[1,2] = 2.5e-1

outer = Torus(Rout,Zout,[0,1],[1])

RZ = hcat(outer.(θ,0.0)...)

plot(RZ[1,:],RZ[2,:],aspect_ratio=:equal)






RbcOut = zeros(Float64,(1,33))
ZbsOut = zeros(Float64,(1,33))

RbcIn = zeros(Float64,(1,33))
ZbsIn = zeros(Float64,(1,33))


RbcOut[1]    =  4.041135400356037E+00; ZbsOut[1]    =  0.000000000000000E+00;
RbcOut[2]    =  1.038178094199237E+00; ZbsOut[2]    = -1.561487214734595E+00;
RbcOut[3]    =  2.098569438650291E-02; ZbsOut[3]    =  7.517833895284363E-02;
RbcOut[4]    = -1.556652677426258E-02; ZbsOut[4]    =  1.367069428209015E-02;
RbcOut[5]    =  2.661700854262414E-03; ZbsOut[5]    = -5.115432971414732E-03;
RbcOut[6]    =  4.785899100446688E-04; ZbsOut[6]    = -2.367922532281356E-05;
RbcOut[7]    = -4.277170158982305E-04; ZbsOut[7]    =  4.797132309430473E-04;
RbcOut[8]    =  5.543778295070250E-05; ZbsOut[8]    = -8.072762565267903E-05;
RbcOut[9]    =  4.979036938393830E-05; ZbsOut[9]    = -3.718554509294367E-05;
RbcOut[10]   = -1.796765283799183E-05; ZbsOut[10]   =  1.536933967615198E-05;
RbcOut[11]   = -2.377661849947362E-06; ZbsOut[11]   = -2.338589168549145E-06;
RbcOut[12]   =  3.551786680572178E-06; ZbsOut[12]   = -4.338940150422311E-08;
RbcOut[13]   = -1.701788334984984E-06; ZbsOut[13]   =  1.400088453818361E-06;
RbcOut[14]   =  4.333339215270045E-07; ZbsOut[14]   = -1.119726848153810E-06;
RbcOut[15]   =  3.049252529910454E-07; ZbsOut[15]   = -1.318268530889247E-09;
RbcOut[16]   = -3.604407231982447E-07; ZbsOut[16]   =  3.913690673654217E-07;
RbcOut[17]   =  7.584655355530582E-08; ZbsOut[17]   = -1.402111970447130E-07;
RbcOut[18]   =  8.002500606685238E-08; ZbsOut[18]   = -6.474815340032061E-08;
RbcOut[19]   = -5.045745254025505E-08; ZbsOut[19]   =  5.615707341427055E-08;
RbcOut[20]   = -4.742044039673486E-09; ZbsOut[20]   =  3.180905965801948E-10;
RbcOut[21]   =  1.365790513800586E-08; ZbsOut[21]   = -1.327752900952558E-08;
RbcOut[22]   = -2.491780260235909E-09; ZbsOut[22]   =  3.226308626500275E-09;
RbcOut[23]   = -2.258175910797723E-09; ZbsOut[23]   =  2.085280130938560E-09;
RbcOut[24]   =  9.035538509789723E-10; ZbsOut[24]   = -1.103246648737506E-09;
RbcOut[25]   =  2.521910786093891E-10; ZbsOut[25]   = -1.931113582046620E-10;
RbcOut[26]   = -1.544586175302791E-10; ZbsOut[26]   =  2.366410258976099E-10;
RbcOut[27]   = -3.364106577785311E-11; ZbsOut[27]   = -3.467444317281823E-12;
RbcOut[28]   =  5.002585191818008E-12; ZbsOut[28]   = -3.355899105022525E-11;
RbcOut[29]   =  1.651166828997631E-11; ZbsOut[29]   =  5.085494430080715E-12;
RbcOut[30]   =  1.360704678907421E-11; ZbsOut[30]   =  2.322075285404156E-12;
RbcOut[31]   = -2.041475056207957E-11; ZbsOut[31]   = -8.039344124784536E-12;
RbcOut[32]   = -7.244505903823517E-12; ZbsOut[32]   =  4.432435918368827E-13;
RbcOut[33]   =  3.134916792674994E-11; ZbsOut[33]   =  2.843559466998492E-11;


RbcIn[1]    =  4.041135400356037E+00; ZbsIn[1]    =  0.000000000000000E+00;
RbcIn[2]    =  0.538178094199237E+00; ZbsIn[2]    = -0.561487214734595E+00;
RbcIn[3]    =  2.098569438650291E-02; ZbsIn[3]    =  7.517833895284363E-02;
RbcIn[4]    = -1.556652677426258E-02; ZbsIn[4]    =  1.367069428209015E-02;
RbcIn[5]    =  2.661700854262414E-03; ZbsIn[5]    = -5.115432971414732E-03;
RbcIn[6]    =  4.785899100446688E-04; ZbsIn[6]    = -2.367922532281356E-05;
RbcIn[7]    = -4.277170158982305E-04; ZbsIn[7]    =  4.797132309430473E-04;
RbcIn[8]    =  5.543778295070250E-05; ZbsIn[8]    = -8.072762565267903E-05;
RbcIn[9]    =  4.979036938393830E-05; ZbsIn[9]    = -3.718554509294367E-05;
RbcIn[10]   = -1.796765283799183E-05; ZbsIn[10]   =  1.536933967615198E-05;
RbcIn[11]   = -2.377661849947362E-06; ZbsIn[11]   = -2.338589168549145E-06;
RbcIn[12]   =  3.551786680572178E-06; ZbsIn[12]   = -4.338940150422311E-08;
RbcIn[13]   = -1.701788334984984E-06; ZbsIn[13]   =  1.400088453818361E-06;
RbcIn[14]   =  4.333339215270045E-07; ZbsIn[14]   = -1.119726848153810E-06;
RbcIn[15]   =  3.049252529910454E-07; ZbsIn[15]   = -1.318268530889247E-09;
RbcIn[16]   = -3.604407231982447E-07; ZbsIn[16]   =  3.913690673654217E-07;
RbcIn[17]   =  7.584655355530582E-08; ZbsIn[17]   = -1.402111970447130E-07;
RbcIn[18]   =  8.002500606685238E-08; ZbsIn[18]   = -6.474815340032061E-08;
RbcIn[19]   = -5.045745254025505E-08; ZbsIn[19]   =  5.615707341427055E-08;
RbcIn[20]   = -4.742044039673486E-09; ZbsIn[20]   =  3.180905965801948E-10;
RbcIn[21]   =  1.365790513800586E-08; ZbsIn[21]   = -1.327752900952558E-08;
RbcIn[22]   = -2.491780260235909E-09; ZbsIn[22]   =  3.226308626500275E-09;
RbcIn[23]   = -2.258175910797723E-09; ZbsIn[23]   =  2.085280130938560E-09;
RbcIn[24]   =  9.035538509789723E-10; ZbsIn[24]   = -1.103246648737506E-09;
RbcIn[25]   =  2.521910786093891E-10; ZbsIn[25]   = -1.931113582046620E-10;
RbcIn[26]   = -1.544586175302791E-10; ZbsIn[26]   =  2.366410258976099E-10;
RbcIn[27]   = -3.364106577785311E-11; ZbsIn[27]   = -3.467444317281823E-12;
RbcIn[28]   =  5.002585191818008E-12; ZbsIn[28]   = -3.355899105022525E-11;
RbcIn[29]   =  1.651166828997631E-11; ZbsIn[29]   =  5.085494430080715E-12;
RbcIn[30]   =  1.360704678907421E-11; ZbsIn[30]   =  2.322075285404156E-12;
RbcIn[31]   = -2.041475056207957E-11; ZbsIn[31]   = -8.039344124784536E-12;
RbcIn[32]   = -7.244505903823517E-12; ZbsIn[32]   =  4.432435918368827E-13;
RbcIn[33]   =  3.134916792674994E-11; ZbsIn[33]   =  2.843559466998492E-11;





m = collect(0:32)
# n = collect(0:32)
n = [0]

outer = Torus(RbcOut,ZbsOut,m,n)
inner = Torus(RbcIn,ZbsIn,m,n)


X,Y = meshgrid(inner,outer,0.0,11,3)


RZout = hcat(outer.(θ,π/6)...)
RZin = hcat(inner.(θ,π/6)...)

plot(RZout[1,:],RZout[2,:], aspect_ratio=:equal)
plot!(RZin[1,:],RZin[2,:],  aspect_ratio=:equal)
scatter!(X[:],Y[:])




D = Grid2D(X,Y)


